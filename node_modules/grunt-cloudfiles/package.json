{
  "name": "grunt-cloudfiles",
  "version": "0.1.0",
  "description": "Grunt task to work with Rackspace Cloudfiles",
  "repository": {
    "type": "git",
    "url": "https://github.com/rtgibbons/grunt-cloudfiles.git"
  },
  "main": "grunt.js",
  "keywords": [
    "gruntplugin",
    "rackspace",
    "cloudfiles"
  ],
  "author": {
    "name": "Ryan Gibbons",
    "email": "rtgibbons23@gmail.com"
  },
  "contributors": [
    {
      "name": "Thomas Welton",
      "email": "thomaswelton@me.com"
    },
    {
      "name": "Justin H. Johnson",
      "email": "justin.hills.johnson@gmail.com"
    },
    {
      "name": "Manuel Razzari",
      "email": "manuel@ultimorender.com.ar"
    },
    {
      "name": "Ken Perkins",
      "email": "ken.perkins@rackspace.com"
    }
  ],
  "license": "MIT",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "async": "~0.2.9",
    "pkgcloud": "~0.8.3"
  },
  "devDependencies": {
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "readme": "# Grunt Cloud Files\n\n## About\n[Cloud Files](http://www.rackspace.com/cloud/files/) is Rackspace's cloud object storage. It's simliar to Amazon S3.\n\nThis task is based on [grunt-s3](https://github.com/pifantastic/grunt-s3) by Aaron Forsander,\nand uses the [pkgcloud](https://github.com/nodejitsu/pkgcloud) client by Nodejitsu.\n\nThis is all designed to work with Rackspace Cloud Files, and hasn't been tested on OpenStack Storage.\n\n## Installation\n1. `npm install grunt-cloudfiles --save-dev` (or manually add `grunt-cloudfiles` to your `package.json`).\n1. Add `grunt.loadNpmTasks('grunt-cloudfiles');` to `Gruntfile.js`\n\n## Configuration\n\nAdd the task to your Gruntfile's **grunt.initConfig**:\n```javascript\ncloudfiles: {\n  prod: {\n    'user': 'your Rackspace username',\n    'key': 'your Rackspace API key',\n    'upload': [{\n      'container': 'name of your Cloud Files container',\n      'src': 'source/static/**/*',\n      'dest': 'some/folder/',\n      'region': 'DFW',\n      'stripcomponents': 1\n    }]\n  }\n}\n```\n\n**Stripcomponents** (as in tar) will strip _X_ leading path parts from the source dir.\nIn the example above, the file `source/static/js/app/main.js`\nwill be uploaded to `some/folder/static/js/app/main.js`, with the `source/` part being removed.\n\nSince this is a multi task, you can add **multiple targets** as needed.\nIn this example we only have `prod`, but you could have `staging`, etc.\n\nRemember that your Rackspace **API key** is private. If you are commiting your Gruntfile\nto a public repository, you probably want to store it in a separate local_config.json file.\n\nFor Rackspace UK users an additional configuration parameter `authUrl` is required to use the correct CDN url for UK accounts.\n\n```javascript\ncloudfiles: {\n  prod: {\n    ...\n    'authUrl': 'lon.identity.api.rackspacecloud.com',\n    ...\n  }\n}\n```\n\n## Changelog\n\n### 0.1.0\n\n* added support for regions\n* added syncing based on MD5 Hash\n* added ability to create and/or set the CDN enabled container if neither exists\n* cleaned up code and moved from deferreds\n\n### 0.0.4\n\n* Added support for Rackspace UK cloudfile accounts\n\n### 0.0.3\n\n* Allow for destination folder in container\n\n### 0.0.2\n\n* Migrated to pkgcloud cloud\n* Support grunt >= 0.4.0\n\n### 0.0.1\n\n* Auth and adding files\n\n## Future Work\n\n* Provide full management of files\n* Implement meta tags\n\n## Credits\n* [Aaron Forsander <pifantastic>](https://github.com/pifantastic/grunt-s3)\n\n [grunts3]: https://github.com/pifantastic/grunt-s3\n [noddecloudfiles]: https://github.com/nodejitsu/node-cloudfiles\n [nodejitsu]: https://github.com/nodejitsu\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rtgibbons/grunt-cloudfiles/issues"
  },
  "_id": "grunt-cloudfiles@0.1.0",
  "_from": "grunt-cloudfiles@"
}
